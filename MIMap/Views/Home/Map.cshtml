@using BusinessHandler.Model;
@using Newtonsoft.Json;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var keyWords = (List<BusinessHandler.MessageHandler.KeyWordModel>)ViewData["KeyWordList"];
    var municipalityList = (List<MapFilterModel>)ViewData["municipalityList"];
    ViewBag.Title = "Map";
}

    <script>
        var mapMasterData = new Array();
        @{
            var json = new HtmlString(JsonConvert.SerializeObject(municipalityList));
           <text>
        sessionStorage.setItem("municipalityList", '@json');
        </text>

            var mapInitialData = (List<MapMunicipalityColor>)ViewData["mapInitialData"];
            if (mapInitialData.Any())
            {
         <text>
        mapMasterData=@Html.Raw(JsonConvert.SerializeObject(mapInitialData));
        </text>
                }

            }
    </script>

    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/3.15/themes/css/cartodb.css" />
   <link href="~/Content/bootstrap.colorpickersliders.css?version=@StaticSetting.version" rel="stylesheet" />
    <script src="http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/tinycolor/0.11.1/tinycolor.min.js"></script>
    <script src="~/Scripts/bootstrap.colorpickersliders.js?version=@StaticSetting.version"></script>


<div style="margin-top:30px; position:fixed; z-index:1000;background-color:#fff; padding-bottom:10px;padding-top:5px; width:100%" id="div_tab_header">
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active" data-controls="all_data"><a href="#all_data" aria-controls="all_data" role="tab" data-toggle="tab">All Data</a></li>
        <li role="presentation" data-controls="notes_only"><a href="#notes_only" aria-controls="notes_only" role="tab" data-toggle="tab">Ordinances</a></li>
    </ul>
    <div class="row">
        <div class="search-container">
            <div class="row property-search-form">
                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_CountyName" id="sel_search_CountyName" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in municipalityList.OrderBy(x => x.CountyName).Select(x => x.CountyName).Distinct())
                            {
                                if (!string.IsNullOrEmpty(r))
                                {
                                    <option value="@r">@r</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_CityName" id="sel_search_CityName" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in municipalityList.OrderBy(x => x.MunicipalityName))
                            {
                                if (!string.IsNullOrEmpty(r.MunicipalityName))
                                {
                                    <option value="@r.MunicipalityName">@r.MunicipalityName</option>
                                }
                            }
                        }
                    </select>
                </div>

                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_KeyWord" id="sel_search_KeyWord" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in keyWords)
                            {
                                <option value="@r.KeyWord">@r.KeyWord</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_DeployDate" id="sel_search_DeployDate" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in municipalityList.Select(x => x.DeployDate).Distinct())
                            {
                                <option value="@r">@r</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-sm-1 form-group">
                    <input type="text" name="txt_search_StartMeetingDate" id="txt_search_StartMeetingDate" placeholder="Start Date" class="form-control" />
                </div>
                <div class="col-xs-12 col-sm-1 form-group">
                    <input type="text" name="txt_search_EndMeetingDate" id="txt_search_EndMeetingDate" placeholder="End Date" class="form-control" />
                </div>
                <div class="col-xs-12 col-sm-1 form-group">

                    <input type="submit" value="Search" id="btn_Search" class="btn btn-primary btn-block form-control" />
                </div>
                <div class="col-xs-12 col-sm-1 form-group">
                    <input type="submit" value="Save Query" id="btn_SaveInnitialQuery" class="btn btn-info btn-block form-control" />
                </div>

            </div>
        </div>

    </div>
</div>

    <div id="div-query" >
        <div class="col-md-6" style="padding-left:0px;">
            <ul class="list-group" id="ul_queryGourp" style="display:none" >
                <li class="list-group-item active" >
                    Query
                </li>
            </ul>
            </div>
        <div class="col-md-6" style="padding-left:0px;">
            <button type="button" class="btn btn-primary glyphicon glyphicon-backward"   title='Hide Query Group' style="margin-left:15px;height:42px; top:0px; display:none; z-index:20; border:none" id="btn_hideQueryDiv"></button>
            <button type="button" class="btn btn-primary glyphicon glyphicon-forward"   title='Show Query Group' style="margin-left:-24px;height:42px; " id="btn_showQueryDiv"></button>

         </div>

        </div>
    
<div class="tab-content" style="margin-top:125px;" >
    <div role="tabpanel" class="tab-pane active" id="all_data" >

        <div class="row">
            <div id="div-data-area">
                <table id="tb_municipality"></table>
            </div>
            <div id="div-data-map" >
                <div class="h-scroll">
                    <div id="map"></div>
                </div>
            </div>
        </div>

    </div>
    <div role="tabpanel" class="tab-pane" id="notes_only" style="padding-left:15px;padding-right:15px;">
      @Html.Partial("CityAllNote")
    </div>
</div>


    
    <div class="modal fade" id="queryModal" tabindex="-1" role="dialog" aria-labelledby="queryModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Query Detail</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="query-title" class="control-label">Query Title:</label>
                            <input type="text" class="form-control" id="query-title">
                        </div>
                        <div class="form-group">

                            <label for="query-content" class="control-label">Query Content:</label>

                            <textarea rows="5" class="form-control" id="query-content" style="max-width:435px !important"></textarea>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btn_SaveQuery">Save</button>
                    <button type="button" class="btn btn-danger" id="btn_DeleteQuery">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="queryInnitialModal" tabindex="-1" role="dialog" aria-labelledby="queryModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Query Title</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="query-title" class="control-label">Query Title:</label>
                            <input type="text" class="form-control" id="query-Innitial-title">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btn_InnitialSaveQuery">Save</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="myModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add Comments</h4>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="hid_DocId" />
                    <input type="hidden" id="hid_FilePath" />
                    <input type="hidden" id="hid_QueryGuid" />
                    <textarea class="form-control" rows="3" id="txt_Comments"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="cursor:pointer">Close</button>
                    <button type="button" class="btn btn-primary" id="btn_Save_Comment">Save changes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>


    <div class="modal fade" tabindex="-1" role="dialog"  id="myNotesModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Maintain Meeting Notes</h4>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="hid_noteDocId" />
                    <table class="table" id="meetingNote-table">
                        <thead><tr><th style="width:55%">Note</th><th style="width:15%">Modify Date</th><th style="width:15%">Modify User</th><th style="width:4%"></th><th style="width:1%"></th></tr></thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" id="btn-add-meetingNote">Add</button>
                    <button type="button" class="btn btn-primary" id="btn_Save_MeetingNote" >Save changes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

@Html.Partial("CitySideBar")

    <script>
        //load table data
        $(function () {
            loadAllDataBySequence();
        });
        function loadAllDataBySequence()
        {
            initialMap();
            loadListData();
            loadQueryGroup();
        }
     
        function loadListData()
        {
            var oTable = new TableInit();
            oTable.Init();
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();
        }

        var TableInit = function () {
            var oTableInit = new Object();
            oTableInit.Init = function () {
                $('#tb_municipality').bootstrapTable({
                    url: '/Home/GetParentDataList',
                    method: 'get',
                    cache: false,
                    pagination: true,
                    sortable: true,
                    queryParams: oTableInit.queryParams,
                    sidePagination: "server",
                    pageSize:25,
                    pageList: [10, 25, 50, 100],
                    showColumns: true,
                    detailView: true,
                    achillesToolbar: true,
                    columns: [
                         {
                             field: 'MunicipalityDispaly',
                             title: 'Municipality',
                             sortable: true,
                             width: '30%'
                         },
                        {
                            field: 'DocType',
                            title: 'Type',
                            sortable: true,
                            width: '25%'
                        },

                          {
                              field: 'MeetingDateDisplay',
                              title: 'Meeting Date',
                              sortable: true,
                              order:"desc",
                              width: '10%'
                        },
                          {
                              field: 'ScrapeDate',
                              title: 'Scrape Date',
                              sortable: true,
                              order: "desc",
                              width: '10%'
                          },
                           {
                               field: 'CityDeployDate',
                               title: 'Deploy Date',
                               sortable: true,
                               order: "desc",
                               width: '10%'
                           },
                            {
                                field: 'IsViewed',
                                title: 'Viewed',
                                'class': 'hideColumn'
                            },

                        {
                            field: 'MinicipalityOperation',
                            title: '',
                            align: 'center',
                            width: '14%'
                        }
                    ],

                    onExpandRow: function (index, row, $detail) {
                        oTableInit.InitSubTable(index, row, $detail);
                        openMarker(row.ObjectId);
                    },
                    onLoadSuccess: function (data) {
                        for (var i = 0; i < data.rows.length; i++) {
                            var doc = data.rows[i];
                            sessionStorage.setItem(doc.DocId, JSON.stringify(doc.DocQuerySubList));
                        }
                        $("#tb_municipality").children().eq(1).children().each(function () {
                            if ($(this).children(":last").prev().children().html() == "No") {
                                $(this).css("background-color", "#eee");
                            }
                        });
                        $(function () {
                            $('[data-toggle="tooltip"]').tooltip()
                        })
                    },

                });

                $('#tb_cityAllNote').bootstrapTable({
                    url: '/Home/GetCityOrdinanceList',
                    method: 'get',
                    cache: false,
                    pagination: true,
                    toolbar:'#toolbar',
                    sortable: false,
                    queryParams: oTableInit.queryParams,
                    sidePagination: "server",
                    pageList: [10, 25, 50, 100],
                    showColumns: true,
                    onLoadSuccess: function (data) {
                        $('[data-toggle="popover"]').popover();
                       
                    },
                });
            };


            oTableInit.queryParams = function (params) {
                var temp = getSearchData();
                temp.limit = params.limit;
                temp.offset = params.offset;
                temp.sortName = this.sortName;
                temp.sortOrder = this.sortOrder;
                return temp;
            };

            oTableInit.InitSubTable = function (index, row, $detail) {
                var parentid = row.DocId;
                var isViewed = $(".sp_" + parentid).html();
                if (isViewed != "Yes") {
                    $.ajax({
                        url: '@Url.Action("UpdateDocStatus", "Home")',
                        data: { DocId: parentid},
                        dataType: 'json',
                        type: "POST",
                        success: function (result) {
                        },
                        complete: function (XMLHttpRequest, textStatus) {
                            $(".sp_" + parentid).html("Yes");
                            $(".sp_" + parentid).parent().parent().css("background-color", "#fff");
                        },
                        error: function (xhr, textStatus, errorThrown) {

                        }
                    });
                }
                var dataList = JSON.parse(sessionStorage.getItem(parentid));
                var cur_table = $detail.html('<table></table>').find('table');
                $(cur_table).bootstrapTable({
                    data: dataList,
                    columns: [

                        {
                            field: 'PageNumber',
                            title: 'Page',
                            sortable: true,
                            width: '5%'
                        },

                        {
                            field: 'KeyWord',
                            title: 'Key Word',
                            sortable: true,
                            width: '15%'
                        },

                        {
                            field: 'Content',
                            title: 'Content',
                            width: '60%'
                        },
                        {
                            field: 'Comment',
                            title: 'Comment',
                            width: '10%'
                        },
                        {
                            field: 'Operation',
                            title: 'Operation',
                            align: 'center',
                            width: '10%'
                        }
                    ],

                });
            };

            return oTableInit;
        };
        var ButtonInit = function () {
            var oInit = new Object();
            var postdata = {};
            oInit.Init = function () {
                //初始化页面上面的按钮事件
            };
            return oInit;
        };
        function expandAllRows() {
            $("#tb_municipality").bootstrapTable('expandAllRows');
        }
        function collapseAllRows() {
            $("#tb_municipality").bootstrapTable('collapseAllRows');
        }
        function OpenDataDetail(obj) {
            var queryGuid = $(obj).attr("data-queryguid");
            var comment = $(obj).parent().prev().children().html();
            $("#hid_DocId").val("");
            $("#hid_QueryGuid").val(queryGuid);
            $("#txt_Comments").val(comment);
            $("#myModal").modal('show');
        }
        function OpenDocNoteDetail(obj) {
            var docGuid = $(obj).attr("data-docid");
            $("#hid_noteDocId").val(docGuid);
            loadNoteData(docGuid);

        }
        function ShowStatus(obj) {
            var selectedStatus = $(obj).children().attr("data-tag");
            var isViewed = "";
            if ($("#div_status_select").attr("data-status") != null) {
                isViewed = $("#div_status_select").attr("data-status");
            }
            if (isViewed != selectedStatus) {
                $("#div_status_select").attr("data-status", selectedStatus);
                $("#sp_view_status").html(selectedStatus);
                searchData();
            }

        }
        function ShowImportant(obj) {
            var selectedImportant = $(obj).children().attr("data-tag");
            var important = "";
            if ($("#div_status_select").attr("data-important") != null) {
                important = $("#div_status_select").attr("data-important");
            }
            if (important != selectedImportant) {
                $("#div_status_select").attr("data-important", selectedImportant);
                $("#sp_important_status").html($(obj).children().html());
                searchData();
            }
        }

        function RemoveData(obj) {
            var removed = "False";
            var docId = $(obj).attr("data-docid");
            if ($(obj).attr("data-removed")=="Yes") {
                removed = "False";
            }
            else {
                removed = "True";
            }
            $.ajax({
                url: '@Url.Action("UpdateDocImportant", "Home")',
                data: { DocId: docId, Important: removed },
                dataType: 'json',
                type: "POST",
                success: function (result) {
                    successTips();
                    if (removed == "True") {
                        $(obj).parent().parent().parent().hide();
                    }

                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });

        }
        function getSearchData() {

            var isViewed = "";
            var isImportant = "";
            if ($("#div_status_select").attr("data-status") != null) {
                isViewed = $("#div_status_select").attr("data-status");
            }
            if ($("#div_status_select").attr("data-important") != null) {
                isImportant = $("#div_status_select").attr("data-important");
            }
            var result = getQueryData();
            result.IsViewed = isViewed;
            result.Important = isImportant;
            return result;
        }
        function getQueryData() {
            var keyWord = "";
            var cityName = "";
            var countyName = "";
            if ($("#sel_search_KeyWord").val() != null) {
                if ($("#sel_search_KeyWord").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    keyWord = "All";
                }
                else {
                    keyWord = $("#sel_search_KeyWord").val().toString();
                }
            }
            if ($("#sel_search_CityName").val() != null) {
                if ($("#sel_search_CityName").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    cityName = "All";
                }
                else {
                    cityName = $("#sel_search_CityName").val().toString();
                }
            }
            if ($("#sel_search_CountyName").val() != null) {
                if ($("#sel_search_CountyName").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    countyName = "All";
                }
                else {
                    countyName = $("#sel_search_CountyName").val().toString();
                }
            }
            var deployDate = "";
            if ($("#sel_search_DeployDate").val() != null) {
                if ($("#sel_search_DeployDate").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    deployDate = "All";
                }
                else {
                    deployDate = $("#sel_search_DeployDate").val().toString();
                }
            }
            var result = {
                CountyName: countyName,
                CityName: cityName,
                KeyWord: keyWord,
                DeployDate: deployDate,
                StartMeetingDate: $("#txt_search_StartMeetingDate").val(),
                EndMeetingDate: $("#txt_search_EndMeetingDate").val()

            };
            return result;
        }
        function searchData() {
            var allData=false;
            $("li[role='presentation']").each(function(){
                if($(this).hasClass("active")&&$(this).attr("data-controls")=="all_data"){
                    allData=true;
                }
            });
            var temp = getSearchData();
            var tempQueryParams = function () {
                return temp;
            };
            if(allData){
                $("#tb_municipality").bootstrapTable('refresh', { queryParams: tempQueryParams, pageNumber: 1, pageSize: 50 });
                loadMapData();
            }
            else{
                $("#tb_cityAllNote").bootstrapTable('refresh', { queryParams: tempQueryParams, pageNumber: 1, pageSize: 10 });
            }
        }
        function loadQueryGroup() {
            $.ajax({
                url: '@Url.Action("GetSearchQuery", "Home")',
                dataType: 'json',

                type: "GET",
                cache: false,
                success: function (result) {
                    //  var obj = jQuery.parseJSON(result);
                    if (result.length > 0) {
                        $("#ul_queryGourp").children().each(function (index) {
                            if (index > 0) {
                                $(this).remove();
                            }
                        });
                        for (var i = 0; i < result.length; i++) {
                            var data = result[i];
                            var title = data.Title;
                            var subTitle = title.length > 15 ? title.substring(0, 12) + "..." : title;
                            var str = '<li class="list-group-item"  id="query_' + data.Guid + '">';
                            str += '  <a href="JavaScript:void(0)" onclick="searchFromQuery(' + htmlEncode(data.Content) + ',\'' + data.Guid + '\')" style="color:#333333;" title="' + data.Title + '">' + subTitle + '</a>';
                            str += '<span style="cursor:pointer;" class="badge editIcon" data-title="' + data.Title + '" data-content="' + htmlEncode(data.Content) + '" onclick="showQueryDetail(this) ;return false" data-query-guid="' + data.Guid + '" >Edit</span>';
                            str += '</li>';
                            $("#ul_queryGourp").append(str);
                        }
                    }
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });
        }
        function htmlEncode(str) {
            var find = '"';
            var re = new RegExp(find, 'g');
            return str.replace(re, '&quot;');
        }
        function queryGroupHighlight(guid) {
            $("#ul_queryGourp").children().each(function (index) {
                if (index > 0) {
                    $(this).removeClass("highlight");
                }
            });
            $("#query_" + guid).addClass("highlight");
        }
        function showQueryDetail(obj) {
            $("#query-title").val($(obj).attr("data-title"));
            $("#query-content").text($(obj).attr("data-content"));
            sessionStorage.setItem("QueryGuid", $(obj).attr("data-query-guid"));

            $("#queryModal").find('.modal-dialog').css({
                width: '500px'
            });
            $("#queryModal").modal('show');
        }

        function searchFromQuery(temp, guid) {

            var countyStr = "";
            if (temp.CountyName != null) {
                countyStr = temp.CountyName;
            }
            if (countyStr.toUpperCase() == "ALL") {
                $("#sel_search_CountyName").multiselect('selectAll', false);
                $("#sel_search_CountyName").multiselect('updateButtonText');
            }
            else {
                var countyArray = countyStr.split(",");
                $("#sel_search_CountyName").val(countyArray);
                $("#sel_search_CountyName").multiselect("refresh");
            }
            rebuildMuniciplitySelect();

            var municipalityStr = "";
            if (temp.CityName != null) {
                municipalityStr = temp.CityName;
            }
            if (municipalityStr.toUpperCase() == "ALL") {
                $("#sel_search_CityName").multiselect('selectAll', false);
                $("#sel_search_CityName").multiselect('updateButtonText');
            }
            else {
                var cityArray = municipalityStr.split(",");
                $("#sel_search_CityName").val(cityArray);
                $("#sel_search_CityName").multiselect("refresh");
            }
            

            var kwyWordStr = "";
            if (temp.KeyWord != null) {
                kwyWordStr = temp.KeyWord;
            }
            var keyArray = kwyWordStr.split(",");
            $("#sel_search_KeyWord").val(keyArray);
            $("#sel_search_KeyWord").multiselect("refresh");

            var cityDeployDate = "";
            if (temp.DeployDate != null) {
                cityDeployDate = temp.DeployDate;
            }
            var dateArray = cityDeployDate.split(",");
            $("#sel_search_DeployDate").val(dateArray);
            $("#sel_search_DeployDate").multiselect("refresh");


          
            //old data
            if (temp.MeetingDate != null) {
                $("#txt_search_StartMeetingDate").val(temp.MeetingDate)
            }
            if (temp.StartMeetingDate != null) {
                $("#txt_search_StartMeetingDate").val(temp.StartMeetingDate)
            }
            if (temp.EndMeetingDate != null) {
                $("#txt_search_EndMeetingDate").val(temp.EndMeetingDate)
            }
            $("#div_status_select").attr("data-important", "No");
            $("#div_status_select").attr("data-status", "All")
            $("#sp_view_status").html("All");
            $("#sp_important_status").html("");
            queryGroupHighlight(guid);

            searchData();

            $.ajax({
                url: '@Url.Action("AddSearchQueryAmount", "Home")',
                data: { guid: guid },
                dataType: 'json',
                type: "POST",
                success: function (result) {
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });
        }
     

        function rebuildMuniciplitySelect()
        {
            var cityArr = new Array();
            var dataList = JSON.parse(sessionStorage.getItem("municipalityList"));
            
            if ($("#sel_search_CountyName").val() == null) {
                for (var j = 0; j < dataList.length; j++) {
                    cityArr.push(dataList[j].MunicipalityName);
                }
            }
            else {
                var countyStr = $("#sel_search_CountyName").val().toString();
                var countyArr = countyStr.split(",");
                if (countyArr.length > 0) {
                    for (var i = 0; i < countyArr.length; i++) {
                        for (var j = 0; j < dataList.length; j++) {
                            if (dataList[j].CountyName == countyArr[i]) {
                                cityArr.push(dataList[j].MunicipalityName);
                            }
                        }
                    }

                }
            }
            cityArr.sort();
            var htm = "";
            for (var i = 0; i < cityArr.length; i++) {
                htm += "<option value='" + cityArr[i] + "'>" + cityArr[i] + "</option>";
            }
            $("#sel_search_CityName").html(htm);
            $("#sel_search_CityName").multiselect("rebuild");
        }
    </script>
    <script>
       
        jQuery(document).ready(function ($) {

            $("#sel_search_CountyName").multiselect({
                buttonWidth: '100%',
                includeSelectAllOption: true,
                selectAllText: 'All',
                maxHeight:'300',
                nonSelectedText: 'No County Selected',
                onChange: function (element, checked) {
                    rebuildMuniciplitySelect();
                },
                onSelectAll: function () {
                    rebuildMuniciplitySelect();
                },
                onDeselectAll: function () {
                    rebuildMuniciplitySelect();
                }
            });
            $("#sel_search_CityName").multiselect({
                buttonWidth: '100%',
                nonSelectedText: 'No Municipality Selected',
                includeSelectAllOption: true,
                maxHeight:'300',
                selectAllText: 'All'
            });

            $("#sel_search_KeyWord").multiselect({
                buttonWidth: '100%',
                nonSelectedText: 'No Key Word Selected',
                includeSelectAllOption: true,
                maxHeight:'300',
                selectAllText: 'All'
            });
            $("#sel_search_DeployDate").multiselect({
                buttonWidth: '100%',
                nonSelectedText: 'No Deploy Date Selected',
                includeSelectAllOption: true,
                maxHeight:'300',
                selectAllText: 'All'
            });
            $('#txt_search_StartMeetingDate').datepicker({
                format: 'yyyy-mm-dd'
            });
            $('#txt_search_EndMeetingDate').datepicker({
                format: 'yyyy-mm-dd'
            });
            $("#btn_Search").click(function () {
                searchData();
            });


            $("#btn_showQueryDiv").click(function () {
                $("#ul_queryGourp").show();
                $("#btn_hideQueryDiv").show();
                $(this).hide();
            });
            $("#btn_hideQueryDiv").click(function () {
                $("#ul_queryGourp").hide();
                $("#btn_showQueryDiv").show();
                $(this).hide();
            });
            $("#btn_SaveInnitialQuery").click(function () {
                $("#queryInnitialModal").modal('show');
            });
            $("#btn_InnitialSaveQuery").click(function () {

                var title = $("#query-Innitial-title").val();
                var data = getQueryData();
                $.ajax({
                    url: '@Url.Action("SaveSearchQuery", "Home")',
                    data: { query: JSON.stringify(data), title: title },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {

                        $("#queryInnitialModal").modal('hide');
                        loadQueryGroup();

                    },
                    complete: function (XMLHttpRequest, textStatus) {

                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });

            $("#btn_SaveQuery").click(function () {
                var queryGuid = sessionStorage.getItem("QueryGuid");
                var query = $("#query-content").val();
                $.ajax({
                    url: '@Url.Action("UpdateSearchQuery", "Home")',
                    data: { guid: queryGuid, title: $("#query-title").val(), query: query },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                        loadQueryGroup();
                        $("#queryModal").modal('hide');
                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });

            $("#btn_DeleteQuery").click(function () {
                var queryGuid = sessionStorage.getItem("QueryGuid");
                $.ajax({
                    url: '@Url.Action("DeleteSearchQuery", "Home")',
                    data: { guid: queryGuid },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                        $('#query_' + queryGuid).hide();
                        $("#queryModal").modal('hide');
                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });
            $("#btn_Save_Comment").click(function () {
                $.ajax({
                    url: '@Url.Action("SaveComment", "Home")',
                    data: { Comment: $("#txt_Comments").val(), QueryGuid: $("#hid_QueryGuid").val() },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {
                        successTips();
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                        $('#' + $("#hid_QueryGuid").val()).html($("#txt_Comments").val());
                        $("#myModal").modal('hide');
                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });
        
        });
      
    </script>


<script type="infowindow/html" id="infowindow_template">
    <div id="pop-window">
       
        <a href="#close" class="close" style="opacity:1"><img style="width:50px;" src="@StaticSetting.uploadPath/Image/6cDGi.png" /></a>

    </div>
</script>

    <script>
        //map
        var map;
        var layer;
        var popLayer;
        var objectId;
        var defaultColor = "blue";
        function initialMap() {
            //$("#map").css("height", ($(window).height() - 140) + "px");
            //https://achilles.carto.com/builder/9d779336-b8c9-4d7e-a701-46d83baceeaf/embed
            //http://achilles.cartodb.com/u/achilles/api/v2/viz/cac5a2ed-bd44-4522-ab7d-890251635167/viz.json
            cartodb.createVis('map', 'http://achilles.cartodb.com/u/achilles/api/v2/viz/9d779336-b8c9-4d7e-a701-46d83baceeaf/viz.json', {
                tiles_loader: true,
                search: false,
                scrollwheel: false,
                infowindow: true
            })
                .done(function (vis, layers) {
                    map = vis.getNativeMap();
                    layer = layers[1].getSubLayer(0);
                    layer.set({ interactivity: "objectid" });
                    layer.setInteraction(true);
 
                    popLayer = layers[1];
                    var infowindow_model = popLayer.infowindow;
                    popLayer.bind('featureClick', function (ev, latlng, pos, data, layerIndex) {
                        infowindow_model.set({
                            latlng: latlng,
                            visibility: true
                        });
                        showMapPopUp(data.objectid);
                    });
                    infowindow_model.set('template_type', 'underscore');
                    infowindow_model.set('template', $('#infowindow_template').html());
                    createSelector();
                })
                .error(function (err) {
                    console.log(err);
                });
        }
        function loadMapData() {
            mapMasterData = new Array();
            $.ajax({
                url: '@Url.Action("GetMapMasterData", "Home")',
                dataType: 'json',
                data: getSearchData(),
                type: "GET",
                cache: false,
                success: function (result) {
                    if (result.length > 0) {
                        for (var i = 0; i < result.length; i++) {
                            var data = result[i];
                            mapMasterData.push(data);
                        }
                    }
                    createSelector();
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });
        }
        function createSelector() {
            hideSideBar();
            var ids = "'nodata'";
            var cartocss = "#mi_munv5{polygon-fill: " + defaultColor + "; line-color: white; }";

            if (mapMasterData.length > 0) {
                ids = "";
                for (var i = 0; i < mapMasterData.length; i++) {
                    ids += "" + mapMasterData[i].Id + ",";
                    if (mapMasterData[i].Color.length > 0) {
                        cartocss += " #mi_munv5[objectid=" + mapMasterData[i].Id + "]{polygon-fill: " + mapMasterData[i].Color + "}";
                    }
                }
                ids = ids.substring(0, ids.length - 1);
            }
            var sql = new cartodb.SQL({ user: 'achilles' });
            var query = "SELECT * FROM mi_munv5 where objectid in (" + ids + ")";
            layer.setSQL(query);
            layer.setCartoCSS(cartocss);
            sql.getBounds(query).done(function (bounds) {
                map.fitBounds(bounds);
                //map.setZoom(7);
            });
        }

        function openMarker(popUpObjectId) {

            var query = "SELECT ST_Y(ST_Centroid(the_geom)) lat, ST_X(ST_Centroid(the_geom)) lon FROM mi_munv5 where objectid =" + popUpObjectId;
            var sql = new cartodb.SQL({ user: 'achilles' });
            sql.execute(query).done(function (data) {
                if (data.rows != undefined && data.rows.length == 1) {
                    var row = data.rows[0];
                    var latlng = [row.lat, row.lon];
                    popLayer.trigger('featureClick', null, latlng, null, { objectid: popUpObjectId }, 0);
                }
            });
        }

        var oldPopUpObjectId = 0;
        var popUpCityGuid = "";
        function showMapPopUp(objectId) {
            if (oldPopUpObjectId == objectId) {
                if ($("#city_Sidebar").css("display") == "block") {
                    return;
                }
            }
            oldPopUpObjectId = objectId;
            if (mapMasterData.length > 0) {
                for (var i = 0; i < mapMasterData.length; i++) {
                    if (objectId == mapMasterData[i].Id) {
                        popUpCityGuid = mapMasterData[i].Guid
                        break;
                    }

                }
            }
            showSideBar(popUpCityGuid,true);
        }

        function saveMapColer(color) {

            var cartocss = "#mi_munv5{polygon-fill: " + defaultColor + "; line-color: white; }";
            if (mapMasterData.length > 0) {
                for (var i = 0; i < mapMasterData.length; i++) {
                    if (oldPopUpObjectId == mapMasterData[i].Id) {
                        mapMasterData[i].Color = color;
                    }
                    if (mapMasterData[i].Color.length > 0) {
                        cartocss += " #mi_munv5[objectid=" + mapMasterData[i].Id + "]{polygon-fill: " + mapMasterData[i].Color + "}";
                    }
                }
            }
            layer.setCartoCSS(cartocss);

            $.ajax({
                url: '@Url.Action("UpdateMapColor", "Home")',
                dataType: 'json',
                data: { cityGuid: popUpCityGuid, color: color },
                type: "post",
                cache: false,
                success: function (result) {
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });
        }
    </script>
