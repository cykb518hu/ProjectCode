@using BusinessHandler.Model;
@using Newtonsoft.Json;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var keyWords = (List<BusinessHandler.MessageHandler.KeyWordModel>)ViewData["KeyWordList"];
    var municipalityList = (List<MapFilterModel>)ViewData["municipalityList"];
    ViewBag.Title = "Map";
}

    <script>
        var mapMasterData = new Array();
        var defaultTags=new Array();
        @{
            var str = StaticSetting.DefaultTags;
            var tags = new List<NoteTags>();
            var arr = str.Split(',');
            foreach (var a in arr)
            {
                tags.Add(new NoteTags { tag = a });
            }

            var json = new HtmlString(JsonConvert.SerializeObject(municipalityList));
           <text>
        sessionStorage.setItem("municipalityList", '@json');
        </text>

            var mapInitialData = (List<MapMunicipalityColor>)ViewData["mapInitialData"];
            if (mapInitialData.Any())
            {
         <text>
        mapMasterData=@Html.Raw(JsonConvert.SerializeObject(mapInitialData));
        defaultTags=@Html.Raw(JsonConvert.SerializeObject(tags));
        </text>
                }

            }
    </script>

    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/3.15/themes/css/cartodb.css" />
   <link href="~/Content/bootstrap.colorpickersliders.css?version=@StaticSetting.version" rel="stylesheet" />
    <script src="http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/tinycolor/0.11.1/tinycolor.min.js"></script>
    <script src="~/Scripts/bootstrap.colorpickersliders.js?version=@StaticSetting.version"></script>
<link href="~/Content/selectize.default.css" rel="stylesheet" />
<script src="~/Scripts/selectize.min.js"></script>

<link rel="stylesheet" href="~/Content/jquery-ui.css?version=@StaticSetting.version">
<script src="~/Scripts/jquery-ui.js?version=@StaticSetting.version"></script>

<div style="margin-top:30px; position:fixed; z-index:1000;background-color:#fff; padding-bottom:10px;padding-top:5px; width:100%" id="div_tab_header">
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active" data-controls="all_data"><a href="#all_data" aria-controls="all_data" role="tab" data-toggle="tab">All Data</a></li>
        <li role="presentation" data-controls="notes_only"><a href="#notes_only" aria-controls="notes_only" role="tab" data-toggle="tab">Ordinances</a></li>
        <li role="presentation" data-controls="meeting_calendar"><a href="#meeting_calendar" aria-controls="meeting_calendar" role="tab" data-toggle="tab">Calendar</a></li>
    </ul>
    <div class="row">
        <div class="search-container">
            <div class="row property-search-form">
                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_CountyName" id="sel_search_CountyName" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in municipalityList.OrderBy(x => x.CountyName).Select(x => x.CountyName).Distinct())
                            {
                                if (!string.IsNullOrEmpty(r))
                                {
                                    <option value="@r">@r</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_CityName" id="sel_search_CityName" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in municipalityList.OrderBy(x => x.MunicipalityName))
                            {
                                if (!string.IsNullOrEmpty(r.MunicipalityName))
                                {
                                    <option value="@r.MunicipalityName">@r.MunicipalityName</option>
                                }
                            }
                        }
                    </select>
                </div>

                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_KeyWord" id="sel_search_KeyWord" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in keyWords)
                            {
                                <option value="@r.KeyWord">@r.KeyWord</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-sm-2 form-group">
                    <select name="sel_search_DeployDate" id="sel_search_DeployDate" class="form-control" multiple="multiple">
                        @{
                            foreach (var r in municipalityList.Select(x => x.DeployDate).Distinct())
                            {
                                <option value="@r">@r</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-sm-1 form-group">
                    <input type="text" name="txt_search_StartMeetingDate" id="txt_search_StartMeetingDate" placeholder="Start Date" class="form-control" />
                </div>
                <div class="col-xs-12 col-sm-1 form-group">
                    <input type="text" name="txt_search_EndMeetingDate" id="txt_search_EndMeetingDate" placeholder="End Date" class="form-control" />
                </div>
                <div class="col-xs-12 col-sm-1 form-group">

                    <input type="submit" value="Search" id="btn_Search" class="btn btn-primary btn-block form-control" />
                </div>
                <div class="col-xs-12 col-sm-1 form-group">
                    <input type="submit" value="Save Query" id="btn_SaveInnitialQuery" class="btn btn-info btn-block form-control" />
                </div>

            </div>
        </div>

    </div>
</div>

    <div id="div-query" >
        <div class="col-md-6" style="padding-left:0px;">
            <ul class="list-group" id="ul_queryGourp" style="display:none" >
                <li class="list-group-item active" >
                    Query
                </li>
            </ul>
            </div>
        <div class="col-md-6" style="padding-left:0px;">
            <button type="button" class="btn btn-primary glyphicon glyphicon-backward"   title='Hide Query Group' style="margin-left:15px;height:42px; top:0px; display:none; z-index:20; border:none" id="btn_hideQueryDiv"></button>
            <button type="button" class="btn btn-primary glyphicon glyphicon-forward"   title='Show Query Group' style="margin-left:-24px;height:42px; " id="btn_showQueryDiv"></button>

         </div>

        </div>
    
<div class="tab-content" style="margin-top:125px;" >
    <div role="tabpanel" class="tab-pane active" id="all_data" >

        <div class="row">
            <div id="div-data-area">
                <table id="tb_municipality"></table>
            </div>
            <div id="div-data-map" >
                <div class="h-scroll">
                    <div id="map"></div>
                </div>
            </div>
        </div>

    </div>
    <div role="tabpanel" class="tab-pane" id="notes_only" style="padding-left:15px;padding-right:15px;">
      @Html.Partial("CityAllNote")
    </div>
    <div role="tabpanel" class="tab-pane" id="meeting_calendar" style="padding-left:15px;padding-right:15px;">
        @Html.Partial("MeetingCalendar")
    </div>
</div>


    
    <div class="modal fade" id="queryModal" tabindex="-1" role="dialog" aria-labelledby="queryModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Query Detail</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="query-title" class="control-label">Query Title:</label>
                            <input type="text" class="form-control" id="query-title">
                        </div>
                        <div class="form-group">

                            <label for="query-content" class="control-label">Query Content:</label>

                            <textarea rows="5" class="form-control" id="query-content" style="max-width:435px !important"></textarea>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btn_SaveQuery">Save</button>
                    <button type="button" class="btn btn-danger" id="btn_DeleteQuery">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="queryInnitialModal" tabindex="-1" role="dialog" aria-labelledby="queryModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Query Title</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="query-title" class="control-label">Query Title:</label>
                            <input type="text" class="form-control" id="query-Innitial-title">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btn_InnitialSaveQuery">Save</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" tabindex="-1" role="dialog"  id="myNotesModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Maintain Meeting Notes</h4>
                </div>
                <div class="modal-body">
                    <div class="options"></div>
                    <input type="hidden" id="hid_noteDocId" />
                    <table class="table" id="meetingNote-table">
                        <thead><tr><th style="width:40%">Note</th><th style="width:35%">Tags</th><th style="width:10%">Date</th><th style="width:10%">User</th><th style="width:4%"></th><th style="width:1%"></th></tr></thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" id="btn-add-meetingNote">Add</button>
                    <button type="button" class="btn btn-primary" id="btn_Save_MeetingNote" >Save changes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

<div class="modal fade" tabindex="-1" role="dialog" id="contentDetail">
    <div class="modal-dialog" role="document" style="padding-top:0px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Page Content Detail</h4>
            </div>
            <div class="modal-body" >
                <div style="height:800px;overflow:auto; ">
                    <pre id="contentDetail_text"></pre>
                </div>
               @*<div id="contentDetail_text"></div>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
@Html.Partial("CitySideBar")

    <script>
        //load table data
        $(function () {
            loadAllDataBySequence();
        });
        function loadAllDataBySequence()
        {
            initialMap();
            loadListData();
            loadQueryGroup();
        }
     
        function loadListData()
        {
            var oTable = new TableInit();
            oTable.Init();
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();
        }

        var TableInit = function () {
            var oTableInit = new Object();
            oTableInit.Init = function () {
                $('#tb_municipality').bootstrapTable({
                    url: '/Home/GetParentDataList',
                    method: 'get',
                    cache: false,
                    pagination: true,
                    sortable: true,
                    queryParams: oTableInit.queryParams,
                    sidePagination: "server",
                    pageSize:15,
                    pageList: [10,15, 25, 50],
                    showColumns: true,
                    detailView: true,
                    sortName:'MeetingDateDisplay',
                    sortOrder: 'desc',
                    achillesToolbar: true,
                    columns: [
                         {
                             field: 'MunicipalityDispaly',
                             title: 'Municipality',
                             sortable: true,
                             width: '30%'
                         },
                        {
                            field: 'DocType',
                            title: 'Type',
                            sortable: true,
                            width: '25%'
                        },

                          {
                              field: 'MeetingDateDisplay',
                              title: 'Meeting Date',
                              sortable: true,
                              order:"desc",
                              width: '10%'
                        },
                          {
                              field: 'ScrapeDate',
                              title: 'Scrape Date',
                              sortable: true,
                              order: "desc",
                              width: '10%'
                          },
                           {
                               field: 'CityDeployDate',
                               title: 'Deploy Date',
                               sortable: true,
                               order: "desc",
                               width: '10%'
                           },
                            {
                                field: 'IsViewed',
                                title: 'Viewed',
                                'class': 'hideColumn'
                            },

                        {
                            field: 'MinicipalityOperation',
                            title: '',
                            align: 'center',
                            width: '14%'
                        }
                    ],

                    onExpandRow: function (index, row, $detail) {
                        oTableInit.InitSubTable(index, row, $detail);
                        openMarker(row.ObjectId);
                    },
                    onLoadSuccess: function (data) {
                        for (var i = 0; i < data.rows.length; i++) {
                            var doc = data.rows[i];
                            sessionStorage.setItem(doc.DocId, JSON.stringify(doc.DocQuerySubList));
                        }
                        $("#tb_municipality").children().eq(1).children().each(function () {
                            if ($(this).children(":last").prev().children().html() == "No") {
                                $(this).css("background-color", "#eee");
                            }
                        });
                        $(function () {
                            $('[data-toggle="tooltip"]').tooltip()
                        })
                    },

                });

                $('#tb_cityAllNote').bootstrapTable({
                    url: '/Home/GetCityOrdinanceList',
                    method: 'get',
                    cache: false,
                    pagination: true,
                    toolbar:'#toolbar',
                    queryParams: oTableInit.queryParams,
                    sidePagination: "server",
                    pageList: [10, 25, 50, 100],
                    showColumns: true,
                    onLoadSuccess: function (data) {
                        $('[data-toggle="popover"]').popover();
                       
                    },
                });
            };


            oTableInit.queryParams = function (params) {
                var temp = getSearchData();
                temp.limit = params.limit;
                temp.offset = params.offset;
                temp.sortName = this.sortName;
                temp.sortOrder = this.sortOrder;
                
                return temp;
            };

            oTableInit.InitSubTable = function (index, row, $detail) {
                var parentid = row.DocId;
                var isViewed = $(".sp_" + parentid).html();
                if (isViewed != "Yes") {
                    $.ajax({
                        url: '@Url.Action("UpdateDocStatus", "Home")',
                        data: { DocId: parentid},
                        dataType: 'json',
                        type: "POST",
                        success: function (result) {
                        },
                        complete: function (XMLHttpRequest, textStatus) {
                            $(".sp_" + parentid).html("Yes");
                            $(".sp_" + parentid).parent().parent().css("background-color", "#fff");
                        },
                        error: function (xhr, textStatus, errorThrown) {

                        }
                    });
                }
                var dataList = JSON.parse(sessionStorage.getItem(parentid));
                var cur_table = $detail.html('<table></table>').find('table');
                $(cur_table).bootstrapTable({
                    data: dataList,
                    columns: [

                        {
                            field: 'PageNumber',
                            title: 'Page',
                            sortable: true,
                            width: '5%'
                        },

                        {
                            field: 'KeyWord',
                            title: 'Key Word',
                            sortable: true,
                            width: '15%'
                        },

                        {
                            field: 'Content',
                            title: 'Content',
                            width: '70%'
                        },
                        {
                            field: 'Operation',
                            title: 'Detail',
                            align: 'center',
                            width: '10%'
                        }
                    ],

                });
            };

            return oTableInit;
        };
        var ButtonInit = function () {
            var oInit = new Object();
            var postdata = {};
            oInit.Init = function () {
                //初始化页面上面的按钮事件
            };
            return oInit;
        };
        function expandAllRows() {
            $("#tb_municipality").bootstrapTable('expandAllRows');
        }
        function collapseAllRows() {
            $("#tb_municipality").bootstrapTable('collapseAllRows');
        }

        function OpenDocNoteDetail(obj) {
            var docGuid = $(obj).attr("data-docid");
            $("#hid_noteDocId").val(docGuid);
            loadNoteData(docGuid);

        }
        function ShowStatus(obj) {
            var selectedStatus = $(obj).children().attr("data-tag");
            var isViewed = "";
            if ($("#div_status_select").attr("data-status") != null) {
                isViewed = $("#div_status_select").attr("data-status");
            }
            if (isViewed != selectedStatus) {
                $("#div_status_select").attr("data-status", selectedStatus);
                $("#sp_view_status").html(selectedStatus);
                searchData();
            }

        }
        function ShowImportant(obj) {
            var selectedImportant = $(obj).children().attr("data-tag");
            var important = "";
            if ($("#div_status_select").attr("data-important") != null) {
                important = $("#div_status_select").attr("data-important");
            }
            if (important != selectedImportant) {
                $("#div_status_select").attr("data-important", selectedImportant);
                $("#sp_important_status").html($(obj).children().html());
                searchData();
            }
        }

        function RemoveData(obj) {
            var removed = "False";
            var docId = $(obj).attr("data-docid");
            if ($(obj).attr("data-removed")=="Yes") {
                removed = "False";
            }
            else {
                removed = "True";
            }

            $.ajax({
                url: '@Url.Action("UpdateDocImportant", "Home")',
                data: { DocId: docId, Important: removed },
                dataType: 'json',
                type: "POST",
                success: function (result) {
                    successTips();
                    if (removed == "True") {
                        $tr = $(obj).parent().parent().parent();
                        if ($tr.next().attr('class')=="detail-view") {
                            $tr.next().remove();
                        };
                        $tr.remove();
                    }

                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });

        }
        function getSearchData() {

            var isViewed = "";
            var isImportant = "";
            if ($("#div_status_select").attr("data-status") != null) {
                isViewed = $("#div_status_select").attr("data-status");
            }
            if ($("#div_status_select").attr("data-important") != null) {
                isImportant = $("#div_status_select").attr("data-important");
            }
            var result = getQueryData();
            result.IsViewed = isViewed;
            result.Important = isImportant;
            result.State = currentState;
            if (searchFromMap && leftCityList.length > 0) {
                result.ObjectIds = leftCityList.toString();
            }
            return result;
        }
        function getQueryData() {
            var keyWord = "";
            var cityName = "";
            var countyName = "";
            if ($("#sel_search_KeyWord").val() != null) {
                if ($("#sel_search_KeyWord").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    keyWord = "All";
                }
                else {
                    keyWord = $("#sel_search_KeyWord").val().toString();
                }
            }
            if ($("#sel_search_CityName").val() != null) {
                if ($("#sel_search_CityName").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    cityName = "All";
                }
                else {
                    cityName = $("#sel_search_CityName").val().toString();
                }
            }
            if ($("#sel_search_CountyName").val() != null) {
                if ($("#sel_search_CountyName").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    countyName = "All";
                }
                else {
                    countyName = $("#sel_search_CountyName").val().toString();
                }
            }
            var deployDate = "";
            if ($("#sel_search_DeployDate").val() != null) {
                if ($("#sel_search_DeployDate").next().children().eq(0).text().indexOf("All selected") >= 0) {
                    deployDate = "All";
                }
                else {
                    deployDate = $("#sel_search_DeployDate").val().toString();
                }
            }
            var result = {
                CountyName: countyName,
                CityName: cityName,
                KeyWord: keyWord,
                DeployDate: deployDate,
                StartMeetingDate: $("#txt_search_StartMeetingDate").val(),
                EndMeetingDate: $("#txt_search_EndMeetingDate").val()

            };
            return result;
        }
        function searchData() {
            var pageTag="";
            $("li[role='presentation']").each(function(){
                if($(this).hasClass("active")){
                    pageTag=$(this).attr("data-controls");
                }
            });
            var temp = getSearchData();
            var tempQueryParams = function () {
                return temp;
            };
            if(pageTag=="all_data"){
                $("#tb_municipality").bootstrapTable('refresh', { queryParams: tempQueryParams, pageNumber: 1, pageSize: 15 });
                if (searchFromMap) {
                    //this means the search is trigger from the button on map, this shouldn't refresh map again
                }
                else {
                    loadMapData();
                }
            }
            else if(pageTag=="notes_only"){
                $("#tb_cityAllNote").bootstrapTable('refresh', { queryParams: tempQueryParams, pageNumber: 1, pageSize: 10 });
            }
            else{
                initialCalendar();
            }
        }
        function loadQueryGroup() {
            $.ajax({
                url: '@Url.Action("GetSearchQuery", "Home")',
                dataType: 'json',

                type: "GET",
                cache: false,
                success: function (result) {
                    //  var obj = jQuery.parseJSON(result);
                    if (result.length > 0) {
                        $("#ul_queryGourp").children().each(function (index) {
                            if (index > 0) {
                                $(this).remove();
                            }
                        });
                        for (var i = 0; i < result.length; i++) {
                            var data = result[i];
                            var title = data.Title;
                            var subTitle = title.length > 15 ? title.substring(0, 12) + "..." : title;
                            var str = '<li class="list-group-item"  id="query_' + data.Guid + '">';
                            str += '  <a href="JavaScript:void(0)" onclick="searchFromQuery(' + htmlEncode(data.Content) + ',\'' + data.Guid + '\')" style="color:#333333;" title="' + data.Title + '">' + subTitle + '</a>';
                            str += '<span style="cursor:pointer;" class="badge editIcon" data-title="' + data.Title + '" data-content="' + htmlEncode(data.Content) + '" onclick="showQueryDetail(this) ;return false" data-query-guid="' + data.Guid + '" >Edit</span>';
                            str += '</li>';
                            $("#ul_queryGourp").append(str);
                        }
                    }
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });
        }
        function htmlEncode(str) {
            var find = '"';
            var re = new RegExp(find, 'g');
            return str.replace(re, '&quot;');
        }
        function queryGroupHighlight(guid) {
            $("#ul_queryGourp").children().each(function (index) {
                if (index > 0) {
                    $(this).removeClass("highlight");
                }
            });
            $("#query_" + guid).addClass("highlight");
        }
        function showQueryDetail(obj) {
            $("#query-title").val($(obj).attr("data-title"));
            $("#query-content").text($(obj).attr("data-content"));
            sessionStorage.setItem("QueryGuid", $(obj).attr("data-query-guid"));

            $("#queryModal").find('.modal-dialog').css({
                width: '500px'
            });
            $("#queryModal").modal('show');
        }

        function searchFromQuery(temp, guid) {

            var countyStr = "";
            if (temp.CountyName != null) {
                countyStr = temp.CountyName;
            }
            if (countyStr.toUpperCase() == "ALL") {
                $("#sel_search_CountyName").multiselect('selectAll', false);
                $("#sel_search_CountyName").multiselect('updateButtonText');
            }
            else {
                var countyArray = countyStr.split(",");
                $("#sel_search_CountyName").val(countyArray);
                $("#sel_search_CountyName").multiselect("refresh");
            }
            rebuildMuniciplitySelect();

            var municipalityStr = "";
            if (temp.CityName != null) {
                municipalityStr = temp.CityName;
            }
            if (municipalityStr.toUpperCase() == "ALL") {
                $("#sel_search_CityName").multiselect('selectAll', false);
                $("#sel_search_CityName").multiselect('updateButtonText');
            }
            else {
                var cityArray = municipalityStr.split(",");
                $("#sel_search_CityName").val(cityArray);
                $("#sel_search_CityName").multiselect("refresh");
            }
            

            var kwyWordStr = "";
            if (temp.KeyWord != null) {
                kwyWordStr = temp.KeyWord;
            }
            var keyArray = kwyWordStr.split(",");
            $("#sel_search_KeyWord").val(keyArray);
            $("#sel_search_KeyWord").multiselect("refresh");

            var cityDeployDate = "";
            if (temp.DeployDate != null) {
                cityDeployDate = temp.DeployDate;
            }
            var dateArray = cityDeployDate.split(",");
            $("#sel_search_DeployDate").val(dateArray);
            $("#sel_search_DeployDate").multiselect("refresh");


          
            //old data
            if (temp.MeetingDate != null) {
                $("#txt_search_StartMeetingDate").val(temp.MeetingDate)
            }
            if (temp.StartMeetingDate != null) {
                $("#txt_search_StartMeetingDate").val(temp.StartMeetingDate)
            }
            if (temp.EndMeetingDate != null) {
                $("#txt_search_EndMeetingDate").val(temp.EndMeetingDate)
            }
            $("#div_status_select").attr("data-important", "No");
            $("#div_status_select").attr("data-status", "All")
            $("#sp_view_status").html("All");
            $("#sp_important_status").html("");
            queryGroupHighlight(guid);

            searchData();

            $.ajax({
                url: '@Url.Action("AddSearchQueryAmount", "Home")',
                data: { guid: guid },
                dataType: 'json',
                type: "POST",
                success: function (result) {
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });
        }
     

        function rebuildMuniciplitySelect()
        {
            var cityArr = new Array();
            var dataList = JSON.parse(sessionStorage.getItem("municipalityList"));
            
            if ($("#sel_search_CountyName").val() == null) {
                for (var j = 0; j < dataList.length; j++) {
                    cityArr.push(dataList[j].MunicipalityName);
                }
            }
            else {
                var countyStr = $("#sel_search_CountyName").val().toString();
                var countyArr = countyStr.split(",");
                if (countyArr.length > 0) {
                    for (var i = 0; i < countyArr.length; i++) {
                        for (var j = 0; j < dataList.length; j++) {
                            if (dataList[j].CountyName == countyArr[i]) {
                                cityArr.push(dataList[j].MunicipalityName);
                            }
                        }
                    }

                }
            }
            cityArr.sort();
            var htm = "";
            for (var i = 0; i < cityArr.length; i++) {
                htm += "<option value='" + cityArr[i] + "'>" + cityArr[i] + "</option>";
            }
            $("#sel_search_CityName").html(htm);
            $("#sel_search_CityName").multiselect("rebuild");
        }

        function viewContentDetail(obj) {
            var contentId= $(obj).attr("data-contentId");
            var keyWord=$(obj).attr("data-keyword");
            $.ajax({
                url: '@Url.Action("GetContentDetail", "Home")',
                data: { contentId: contentId,keyWord:keyWord },
                dataType: 'json',
                type: "GET",
                success: function (result) {
                    $("#contentDetail_text").html(result);
                    $("#contentDetail").find('.modal-dialog').css({
                        width: '1000px'
                    });
                    $("#contentDetail").modal('show');
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });
           
        }
    </script>
    <script>
       
        jQuery(document).ready(function ($) {

            $("#sel_search_CountyName").multiselect({
                buttonWidth: '100%',
                includeSelectAllOption: true,
                selectAllText: 'All',
                maxHeight:'300',
                nonSelectedText: 'No County Selected',
                onChange: function (element, checked) {
                    rebuildMuniciplitySelect();
                },
                onSelectAll: function () {
                    rebuildMuniciplitySelect();
                },
                onDeselectAll: function () {
                    rebuildMuniciplitySelect();
                }
            });
            $("#sel_search_CityName").multiselect({
                buttonWidth: '100%',
                nonSelectedText: 'No Municipality Selected',
                includeSelectAllOption: true,
                maxHeight:'300',
                selectAllText: 'All'
            });

            $("#sel_search_KeyWord").multiselect({
                buttonWidth: '100%',
                nonSelectedText: 'No Key Word Selected',
                includeSelectAllOption: true,
                maxHeight:'300',
                selectAllText: 'All'
            });
            $("#sel_search_DeployDate").multiselect({
                buttonWidth: '100%',
                nonSelectedText: 'No Deploy Date Selected',
                includeSelectAllOption: true,
                maxHeight:'300',
                selectAllText: 'All'
            });
            $('#txt_search_StartMeetingDate').datepicker({
                format: 'yyyy-mm-dd'
            });
            $('#txt_search_EndMeetingDate').datepicker({
                format: 'yyyy-mm-dd'
            });
            $("#btn_Search").click(function () {
                searchData();
            });


            $("#btn_showQueryDiv").click(function () {
                $("#ul_queryGourp").show();
                $("#btn_hideQueryDiv").show();
                $(this).hide();
            });
            $("#btn_hideQueryDiv").click(function () {
                $("#ul_queryGourp").hide();
                $("#btn_showQueryDiv").show();
                $(this).hide();
            });
            $("#btn_SaveInnitialQuery").click(function () {
                $("#queryInnitialModal").modal('show');
            });
            $("#btn_InnitialSaveQuery").click(function () {

                var title = $("#query-Innitial-title").val();
                var data = getQueryData();
                $.ajax({
                    url: '@Url.Action("SaveSearchQuery", "Home")',
                    data: { query: JSON.stringify(data), title: title },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {

                        $("#queryInnitialModal").modal('hide');
                        loadQueryGroup();

                    },
                    complete: function (XMLHttpRequest, textStatus) {

                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });

            $("#btn_SaveQuery").click(function () {
                var queryGuid = sessionStorage.getItem("QueryGuid");
                var query = $("#query-content").val();
                $.ajax({
                    url: '@Url.Action("UpdateSearchQuery", "Home")',
                    data: { guid: queryGuid, title: $("#query-title").val(), query: query },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                        loadQueryGroup();
                        $("#queryModal").modal('hide');
                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });

            $("#btn_DeleteQuery").click(function () {
                var queryGuid = sessionStorage.getItem("QueryGuid");
                $.ajax({
                    url: '@Url.Action("DeleteSearchQuery", "Home")',
                    data: { guid: queryGuid },
                    dataType: 'json',
                    type: "POST",
                    success: function (result) {
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                        $('#query_' + queryGuid).hide();
                        $("#queryModal").modal('hide');
                    },
                    error: function (xhr, textStatus, errorThrown) {

                    }
                });
            });
        
        });
      
    </script>


<script type="infowindow/html" id="infowindow_template">
    <div id="pop-window">
       
        <a href="#close" class="close" style="opacity:1"><img style="width:50px;" src="@StaticSetting.uploadPath/Image/6cDGi.png" /></a>

    </div>
</script>
<script type="text/html" id="btn_refresh_template">
    <input id="btn_refreshLeftData" type="submit" value="Refresh database" class="btn btn-info" onclick="refreshLeftDataBase()" style="padding-bottom: 5px; padding-top: 5px;position: relative;float: right; margin: 20px 20px 0 0;width: 120px;-webkit-box-shadow: rgba(0,0,0,.2) 0 0 4px 2px;-moz-box-shadow: rgba(0,0,0,.2) 0 0 4px 2px;-webkit-border-radius: 4px;-moz-border-radius: 4px;-ms-border-radius: 4px;-o-border-radius: 4px;z-index: 105;font-size: 12px; ">
</script>

    <script>
        //map
        var map;
        var layer;
        var popLayer;
        var objectId;
        var defaultColor = "blue";
        var currentState = sessionStorage.getItem("currentState");
        var pointList = new Array();
        var leftCityList = new Array();
        var searchFromMap = false;

        var mapTable="mi_munv5";
        var mapJson="http://achilles.cartodb.com/u/achilles/api/v2/viz/9d779336-b8c9-4d7e-a701-46d83baceeaf/viz.json";
        if(currentState=="MA")
        {
            mapJson="http://achilles.cartodb.com/u/achilles/api/v2/viz/e2708ddb-5c54-479d-a0cb-66806763ed19/viz.json";
            mapTable="mass_geojson";
        }
        function initialMap() {
            cartodb.createVis('map', mapJson, {
                tiles_loader: true,
                //search: false,
                scrollwheel: false,
                infowindow: true,
                shareable: true
            })
                .done(function (vis, layers) {
                    map = vis.getNativeMap();
                    layer = layers[1].getSubLayer(0);
                    layer.set({ interactivity: "objectid" });
                    layer.setInteraction(true);

                    popLayer = layers[1];
                    var infowindow_model = popLayer.infowindow;
                    popLayer.bind('featureClick', function (ev, latlng, pos, data, layerIndex) {
                        infowindow_model.set({
                            latlng: latlng,
                            visibility: true
                        });
                        showMapPopUp(data.objectid);
                    });
                    infowindow_model.set('template_type', 'underscore');
                    infowindow_model.set('template', $('#infowindow_template').html());
                    createSelector(mapMasterData);
                    initAutocomplete();
                    map.on('moveend', function (e) {
                        var tempList = new Array();
                        var bounds = map.getBounds();
                        for (var i = 0; i < pointList.length; i++) {
                            if (pointList[i].lat > bounds._southWest.lat && pointList[i].lat < bounds._northEast.lat && pointList[i].lng > bounds._southWest.lng && pointList[i].lng < bounds._northEast.lng) {
                                tempList.push(pointList[i].objectid)
                            }
                        }
                        if (tempList.toString() != leftCityList.toString()) {
                            $("#btn_refreshLeftData").css("color", "orangered");
                            leftCityList = tempList;
                        }
                      
                    })
                    //didn't pay
                    //$(".cartodb-share").after($('#btn_refresh_template').html())
                })
                .error(function (err) {
                    console.log(err);
                });
        }
        function loadMapData() {
            mapMasterData = new Array();
            $.ajax({
                url: '@Url.Action("GetMapMasterData", "Home")',
                dataType: 'json',
                data: getSearchData(),
                type: "GET",
                cache: false,
                success: function (result) {
                    if (result.length > 0) {
                        for (var i = 0; i < result.length; i++) {
                            var data = result[i];
                            mapMasterData.push(data);
                        }
                    }
                    createSelector(mapMasterData);
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });
        }
        
        function createSelector(dataArr) {
            popLayer.infowindow.set('visibility', false);
            hideSideBar();
            var ids = "'nodata'";
            var cartocss = "#"+mapTable+"{polygon-fill: " + defaultColor + "; line-color: white; }";

            if (dataArr.length > 0) {
                ids = "";
                for (var i = 0; i < dataArr.length; i++) {
                    ids += "" + dataArr[i].Id + ",";
                    if (dataArr[i].Color.length > 0) {
                        cartocss += " #" + mapTable + " [objectid=" + dataArr[i].Id + "]{polygon-fill: " + dataArr[i].Color + "}";
                    }
                }
                ids = ids.substring(0, ids.length - 1);
            }
            var sql = new cartodb.SQL({ user: 'achilles' });
            var query = "SELECT * FROM "+mapTable+" where objectid in (" + ids + ")";
            layer.setSQL(query);
            layer.setCartoCSS(cartocss);
            sql.getBounds(query).done(function (bounds) {
                map.fitBounds(bounds);
              
            });

            var queryPoints = "SELECT ST_Y(ST_Centroid(the_geom)) lat, ST_X(ST_Centroid(the_geom)) lng,objectid FROM " + mapTable + " where objectid in (" + ids + ") order by objectid"
            sql.execute(queryPoints).done(function (data) {
                if (data.rows != undefined && data.rows.length > 0) {
                    pointList = new Array();
                    leftCityList = new Array();
                    for (var i = 0; i < data.rows.length; i++) {
                        pointList.push(data.rows[i]);
                        leftCityList.push(data.rows[i].objectid)
                    }
                }
            });
        }

        function openMarker(popUpObjectId) {

            var query = "SELECT ST_Y(ST_Centroid(the_geom)) lat, ST_X(ST_Centroid(the_geom)) lng FROM "+mapTable+" where objectid =" + popUpObjectId;
            var sql = new cartodb.SQL({ user: 'achilles' });
            sql.execute(query).done(function (data) {
                if (data.rows != undefined && data.rows.length == 1) {
                    var row = data.rows[0];
                    var latlng = [row.lat, row.lng];
                    popLayer.trigger('featureClick', null, latlng, null, { objectid: popUpObjectId }, 0);
                }
            });
        }

        var oldPopUpObjectId = 0;
        var popUpCityGuid = "";
        function showMapPopUp(objectId) {
            if (oldPopUpObjectId == objectId) {
                if ($("#city_Sidebar").css("display") == "block") {
                    return;
                }
            }
            oldPopUpObjectId = objectId;
            if (mapMasterData.length > 0) {
                for (var i = 0; i < mapMasterData.length; i++) {
                    if (objectId == mapMasterData[i].Id) {
                        popUpCityGuid = mapMasterData[i].Guid
                        break;
                    }

                }
            }
            if (popUpCityGuid.length > 0) {
                showSideBar(popUpCityGuid, true);
            }
        }

        function saveMapColer(color) {

            var cartocss = "#" + mapTable + "{polygon-fill: " + defaultColor + "; line-color: white; }";
            if (mapMasterData.length > 0) {
                for (var i = 0; i < mapMasterData.length; i++) {
                    if (oldPopUpObjectId == mapMasterData[i].Id) {
                        mapMasterData[i].Color = color;
                    }
                    if (mapMasterData[i].Color.length > 0) {
                        cartocss += " #" + mapTable + "[objectid=" + mapMasterData[i].Id + "]{polygon-fill: " + mapMasterData[i].Color + "}";
                    }
                }
            }
            layer.setCartoCSS(cartocss);

            $.ajax({
                url: '@Url.Action("UpdateMapColor", "Home")',
                dataType: 'json',
                data: { cityGuid: popUpCityGuid, color: color },
                type: "post",
                cache: false,
                success: function (result) {
                },
                complete: function (XMLHttpRequest, textStatus) {
                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });
        }
        var idsFromMapSearch = "";
        var colorFromMapSearch = new Array();
        var reStoreMap = false;

        function initAutocomplete() {
            var sql = cartodb.SQL({ user: 'achilles' });
            $(".cartodb-searchbox .text").autocomplete({
                source: function (request, response) {
                    idsFromMapSearch = "";
                    sql.execute("select name, objectid,county,type from " + mapTable + " where name ilike '" + request.term + "%' limit 10").done(function (data) {
                        response(data.rows.map(function (r) {
                            var name = r.name;
                            if (r.county != "null" && r.county != null) {
                                if (r.county.indexOf("County") > -1) {
                                    r.county = r.county.replace("County", "");
                                    r.county = r.county.replace(/\s/g, '');
                                    if (r.type == "T" || r.type == "TC") {
                                        r.type = "Township"
                                    }
                                    if (r.type == "C") {
                                        r.type = "City"
                                    }
                                    name = name + ', ' + r.type + ', ' + r.county;
                                }
                            }
                            idsFromMapSearch += r.objectid + ",";
                            return {
                                label: name,
                                value: name,
                                mapObjectId: r.objectid
                            }
                        })
                        )
                    })
                },
                minLength: 2,
                select: function (event, ui) {
                    event.preventDefault();
                    $(".cartodb-searchbox .text").val(ui.item.label);
                    $(".cartodb-searchbox .text").attr("data-search", ui.item.mapObjectId)
                },
                open: function () {
                    $(".cartodb-searchbox .text").attr("data-search", "");
                    var p = $("#ui-id-1");
                    var offset = p.offset();
                    p.css({
                        left: (offset.left - 30) + "px",
                        top: (offset.top + 5 - $(document).scrollTop()) + "px",
                        position: "fixed",
                        width: "240px"
                    });
                    if (idsFromMapSearch.length > 0) {
                        colorFromMapSearch = new Array();
                        $.ajax({
                            url: '@Url.Action("GetCartoSearchResult", "Home")',
                            dataType: 'json',
                            data: { objectIds: idsFromMapSearch, state: currentState },
                            type: "GET",
                            cache: false,
                            success: function (result) {
                                if (result.length > 0) {
                                    for (var i = 0; i < result.length; i++) {
                                        var data = result[i];
                                        colorFromMapSearch.push(data);
                                    }
                                }
                            }
                        });
                    }
                }
            });

            $('.cartodb-searchbox .text').on('keydown', function (e) {
                if (e.which == 13) {
                    searchBoxResult();
                    e.preventDefault();
                }
            });
            $('.cartodb-searchbox .text').on('input', function (e) {
                if ($(this).val().length == 0 && reStoreMap) {
                    reStoreMap = false;
                    createSelector(mapMasterData);
                }
            });
            $('.cartodb-searchbox .submit').on('click', function (e) {
                searchBoxResult();
                e.preventDefault();

            });
        };
        function searchBoxResult() {
            if ($('.cartodb-searchbox .text').val().length < 2) {
                $('.cartodb-searchbox .text').val("");
                $('.cartodb-searchbox .text').attr("placeholder", "please input at least 2 characters.")
                return;
            }
            reStoreMap = true;
            popLayer.infowindow.set('visibility', false);
            var data;
            var id = $(".cartodb-searchbox .text").attr("data-search");
            if (id.length > 0) {
                for (var i = 0; i < colorFromMapSearch.length; i++) {
                    if (id == colorFromMapSearch[i].Id) {
                        data = colorFromMapSearch[i];
                        break;
                    }
                }
                colorFromMapSearch = new Array();
                colorFromMapSearch.push(data);
            }
            createSelector(colorFromMapSearch);
        }
        
        function refreshLeftDataBase() {
            //only move event is triggerd
            if ($("#btn_refreshLeftData").css("color") == "rgb(255, 69, 0)") {
                leftCityList = new Array();
                var bounds = map.getBounds();
                for (var i = 0; i < pointList.length; i++) {
                    if (pointList[i].lat > bounds._southWest.lat && pointList[i].lat < bounds._northEast.lat && pointList[i].lng > bounds._southWest.lng && pointList[i].lng < bounds._northEast.lng) {
                        leftCityList.push(pointList[i].objectid)
                    }
                }
                searchFromMap = true;
                $("#btn_refreshLeftData").css("color", "white");
                searchData();
                searchFromMap = false;
            }
        }
    </script>
